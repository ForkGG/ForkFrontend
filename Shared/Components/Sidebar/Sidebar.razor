@using ProjectAveryCommon.Model.Entity.Pocos
<div class="w-80 flex flex-col text-label overflow-hidden">
    @* Part over server list *@
    <div class="bg-forkBlue flex py-2 px-4 items-center" style="height: 50px">
        <div class="flex-1 flex flex-col">
            <span class="text-md leading-none">v1.0.0</span>
            <span class="text-xs">You are up to date</span>
        </div>
        @* TODO only show if update privilege is granted *@
        @if (true)
        {
            <IconButton IconChar="'r'" IconSize="19" NoBackground="true" OnClickMethod="TestClickHandler"></IconButton>
        }
    </div>

    @* Server List *@
    <div class="bg-forkBlue-light flex-1 mt-5 flex flex-col overflow-y-auto scroll-left">
        @* Server *@
        <div class="flex-1">
            @if (Entities != null)
            {
                @foreach (var entity in Entities)
                {
                    <SidebarEntity Value="@entity" OnClickCallback="OnSelectEntity" IsSelected="@(SelectedEntity == entity)"></SidebarEntity>
                }
            }
        </div>

        @* Controls *@
        <div class="flex justify-end gap-3 p-3">
            <IconButton IconChar="'I'" IconSize="19" Size="45"></IconButton>
            <IconButton IconChar="'C'" IconSize="19" Size="45"></IconButton>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public EventCallback<IEntity> OnSelectEntity { get; set; }

    [CascadingParameter(Name = nameof(Entities))]
    public List<IEntity>? Entities { get; set; }

    [CascadingParameter(Name = nameof(SelectedEntity))]
    public IEntity? SelectedEntity { get; set; }

    private void TestClickHandler(IconButton button)
    {
        Console.WriteLine(button.IconChar);
    }
}